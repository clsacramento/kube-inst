---

- include: preconf.yml
- include: ntp.yml
- include: etc-hosts.yml

- name: Install curl and apt-transport-https
  package:
    name: "{{ item }}"
    state: latest
  with_items:
  - curl
  - apt-transport-https
  become: yes
  when: ansible_os_family == "Debian"

- name: Add docker repo key
  apt_key:
    url: '{{ docker_gpg }}'
    state: present
  environment: '{{ proxy_env | default ({}) }}'
  become: yes
  when: ansible_os_family == "Debian"

- name: Add docker repo
  shell:
    cmd: |
      cat <<EOF >/etc/apt/sources.list.d/docker.list
      deb {{ docker_repo_debian }}
      EOF
  become: yes
  when: ansible_os_family == "Debian"

- name: Install Docker for Debian
  shell: apt-get update && apt-get install -y --allow-downgrades docker-ce=$(apt-cache madison docker-ce | grep 17.03 | head -1 | awk '{print $3}')
  environment: '{{ proxy_env | default ({}) }}'
  become: yes
  when: ansible_os_family == "Debian"

- name: Remove packages
  package:
    name: "{{ item }}"
    state: absent
  with_items:
  - kubelet
  - kubeadm
  - kubectl
  when: full_clean is defined and full_clean
  become: yes

- name: install docker dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - yum-utils 
    - device-mapper-persistent-data 
    - lvm2
  environment: '{{ proxy_env | default ({}) }}'
  become: yes
  when: ansible_os_family == "RedHat"

- name: Setup yum repo for docker
  shell: "yum-config-manager --add-repo {{ docker_repo_centos }}"
  environment: '{{ proxy_env | default ({}) }}'
  when: ansible_os_family == "RedHat"
  become: yes

- name: Update cache
  shell: "yum makecache fast -y"
  become: yes
  when: ansible_os_family == "RedHat"

- name: Install Docker for RedHat
  shell: "yum install -y docker-ce-selinux-17.03.2.ce-1.el7.centos docker-ce-17.03.2.ce-1.el7.centos --setopt=obsoletes=0"
  environment: '{{ proxy_env | default ({}) }}'
  become: yes
  when: ansible_os_family == "RedHat"

- name: create systemd docker.service
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
  become: yes

- name: Add proxy to docker
  template:
    src: ./templates/http-proxy.conf.j2
    dest: /etc/systemd/system/docker.service.d/http-proxy.conf
  become: yes
  when: proxy is defined

- name: Restart docker
  systemd:
    name: docker
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes

- name: Add Kubernetes repo for RedHat
  template:
    src: ./templates/kubernetes_redhat.repo.j2
    dest: /etc/yum.repos.d/kubernetes.repo
  become: yes
  when: ansible_os_family == "RedHat"

- name: Update cache
  shell: yum makecache fast -y
  become: yes
  when: ansible_os_family == "RedHat"

- name: setenforce = 0
  shell: setenforce 0
  become: yes
  when: ansible_os_family == "RedHat"

- name: net.bridge.bridge-nf-call-iptables = 1
  shell:
    cmd: |
      cat <<EOF >  /etc/sysctl.d/k8s.conf
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      EOF
  become: yes
  when: ansible_os_family == "RedHat"
    
- name: Update sysctl
  shell: sysctl --system
  become: yes
  when: ansible_os_family == "RedHat"

- name: Add apt key
  apt_key:
    url: '{{ kubernetes_apt_repo_gpg }}'
    state: present
  environment: '{{ proxy_env | default ({}) }}'
  become: yes
  when: ansible_os_family == "Debian"

- name: Add Kubernetes repo for Debian
  apt_repository:
    repo: '{{ kubernetes_apt_repo }}'
    state: present
    update_cache: yes
  environment: '{{ proxy_env | default ({}) }}'
  when: ansible_os_family == "Debian"
  become: yes

- name: Install kubernetes packages
  package:
    name: "{{ item }}"
    state: installed
  with_items:
  - kubelet
  - kubeadm
  - kubectl
  environment: '{{ proxy_env | default ({}) }}'
  become: yes

- name: Restart docker
  systemd:
    name: docker
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes

- name: Restart kubelet
  systemd:
    state: started
    name: kubelet
    enabled: yes
    daemon_reload: yes
  become: yes
