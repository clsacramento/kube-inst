---
# Install kubectl

 - name: Download latest kubectl
   shell: "https_proxy={{ proxy }} curl -LO https://storage.googleapis.com/kubernetes-release/release/$(https_proxy={{ proxy }} curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"

 - name: Make the kubectl binary executable
   file:
     path: ./kubectl
     mode: 775

 - name: Move the kubectl binary to PATH
   command: "mv ./kubectl /usr/local/bin/kubectl"
   become: yes

 - name: Add Kubernetes repo
   copy: src=./files/kubernetes.repo dest=/etc/yum.repos.d/.
   become: yes

 - name: Install kubelet
   yum:
     name: kubelet
     state: latest
   become: yes

 - name: Install kubeadm
   yum:
     name: kubeadm
     state: latest
   become: yes

 - name: /proc/sys/net/bridge/bridge-nf-call-iptables = 1
   shell: "echo 1 | tee /proc/sys/net/bridge/bridge-nf-call-iptables"
   become: yes

 - name: Read docker cgroup
   shell: "docker info | grep -i cgroup | cut -d ' ' -f 3"
   register: docker_cgroup
   become: yes

 - name: Verify kubelet cgroup
   shell: cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf | grep -i kubelet_cgroup_args | cut -d '=' -f 4 | sed 's/"$//'
   register: kubelet_cgroup

 - name: Sync kubelet cgroup with docker cgroup
   lineinfile:
     path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
     regexp: '^Environment="KUBELET_CGROUP_ARGS=--cgroup-driver=*'
     line: 'Environment="KUBELET_CGROUP_ARGS=--cgroup-driver={{ docker_cgroup }}'
   when: docker_cgroup != kubelet_cgroup
   become: yes

 - name: Enable and start kubelet
   systemd:
     state: restarted
     name: kubelet
     enabled: yes
   become: yes
